{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/junyap/foodbank/client/src/Pages/Game/index.tsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react-hooks/exhaustive-deps */\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport AnimatedNumber from 'animated-number-react';\nimport DropNotification from 'Components/DropNotification';\nimport Konva from 'konva';\nimport * as React from 'react';\nimport { allFoods, backgrounds, getAndRemoveItem } from './helper';\nimport useGameAlert from './useGameAlert';\nimport { nanoid } from 'nanoid';\nimport { CheckCircleIcon, BanIcon } from '@heroicons/react/outline';\nconst BACKGROUND_PURPLE = '#671E75';\nconst TOTAL_FOOD = allFoods.length;\nconst width = window.innerWidth;\nconst height = window.innerHeight;\nconst stage = new Konva.Stage({\n  container: 'dank',\n  width: width,\n  height: height,\n  visible: true\n});\nconst layer = new Konva.Layer();\nstage.add(layer);\nconst tempLayer = new Konva.Layer();\nstage.add(tempLayer);\n\nconst drawBoard = () => {\n  const drawImage = ({\n    scale,\n    x,\n    y,\n    px,\n    py,\n    start,\n    end,\n    len,\n    name\n  }) => function () {\n    const group = new Konva.Group({\n      x,\n      y,\n\n      clipFunc(ctx) {\n        ctx.beginPath();\n        ctx.moveTo(px, py);\n        ctx.arc(px, py, len, start, Math.PI - end, false);\n      }\n\n    });\n    const options = {\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      image: this,\n      name,\n      scaleX: scale,\n      scaleY: scale\n    };\n    const konvaImage = new Konva.Image(options);\n    group.add(konvaImage);\n    layer.add(group);\n    layer.draw();\n  };\n\n  backgrounds.forEach(b => {\n    const image = new Image();\n    image.onload = drawImage(b);\n    image.src = b.src;\n  });\n};\n\nconst categorisedCharNames = [];\n\nconst Game = () => {\n  _s();\n\n  var _currentCharacter$tar2, _currentCharacter$tar3;\n\n  const [currentCharacter, setCurrentCharacter] = React.useState();\n  const [remainingCharacters, setRemainingCharacters] = React.useState(allFoods);\n  const [notifications, setNotifications] = React.useState([]);\n\n  function showSuccessNotification(name, foodgroup) {\n    const successNotification = {\n      content: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-row justify-around items-center text-black \",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-3xl\",\n            children: 'Correct!'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: `${name} is a ${foodgroup}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n          className: \"w-12 h-12\",\n          style: {\n            color: '#34D399'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this),\n      id: 'notification-' + nanoid()\n    };\n    setNotifications([...notifications, successNotification]);\n  }\n\n  function showErrorNotification(name, foodgroup) {\n    const errorNotification = {\n      content: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-row justify-around items-center text-black \",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-3xl\",\n            children: 'Uh oh!'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: `${name} is not a ${foodgroup}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BanIcon, {\n          className: \"w-12 h-12\",\n          style: {\n            color: '#EF4444'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this),\n      id: 'notification-' + nanoid()\n    };\n    setNotifications([...notifications, errorNotification]);\n  }\n\n  const notificationList = notifications.map(notification => /*#__PURE__*/_jsxDEV(DropNotification, {\n    id: notification.id,\n    content: notification.content,\n    //delay is the number of seconds before the notification expires (3 seconds)\n    delay: 3000\n  }, notification.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this));\n  const {\n    finishGame\n  } = useGameAlert();\n\n  const getAndUpdateRandomChar = () => {\n    // handle game en id=\"dank\"d\n    let availableChars = remainingCharacters;\n\n    if (!remainingCharacters.length) {\n      finishGame();\n      setRemainingCharacters(allFoods);\n      availableChars = allFoods;\n    }\n\n    const [randomChar, updated] = getAndRemoveItem(availableChars, 'image');\n    setRemainingCharacters(updated);\n    if (!randomChar) return;\n    setTimeout(() => {\n      Konva.Image.fromURL(randomChar.image, function (image) {\n        // Scaling image based on original size. Currently uses a hacky way to do it but made the images more consistent in size\n        const imageHeight = image.attrs.image.height;\n        const desiredHeight = 169;\n        const scale = desiredHeight / imageHeight;\n        image.setAttrs({\n          x: stage.width() / 1.4,\n          y: stage.height() / 2,\n          scaleX: scale,\n          scaleY: scale,\n          draggable: true,\n          name: randomChar.name,\n          foodGroup: randomChar.type,\n          stroke: 'black',\n          strokeWidth: 10\n        });\n        image.on('mouseover', function () {\n          document.body.style.cursor = 'pointer';\n        });\n        image.on('mouseout', function () {\n          document.body.style.cursor = 'default';\n        }); // add the shape to the layer\n\n        layer.add(image);\n        layer.draw();\n      });\n    }, 0);\n  };\n\n  function getCurrentCharacter() {\n    var _currentCharacter$tar;\n\n    const {\n      name,\n      foodGroup\n    } = (currentCharacter === null || currentCharacter === void 0 ? void 0 : (_currentCharacter$tar = currentCharacter.target) === null || _currentCharacter$tar === void 0 ? void 0 : _currentCharacter$tar.attrs) || {};\n    return {\n      name,\n      foodGroup\n    };\n  }\n\n  const handleRemoveSuccess = ({\n    name,\n    foodGroup\n  }) => {\n    //This is where it calls the notification of a successful run\n    //success({ name, foodGroup })\n    showSuccessNotification(name, foodGroup); //correctNotification(name, foodGroup)\n\n    setCurrentCharacter(null);\n    getAndUpdateRandomChar();\n    categorisedCharNames.push(name);\n  };\n\n  const removeCharacter = (name, foodGroup, currentFoodGroup) => {\n    const found = stage.find(`.${name}`);\n\n    if (foodGroup === currentFoodGroup) {\n      if (found) {\n        found.each(f => {\n          f.destroy();\n          return f.hide();\n        });\n        handleRemoveSuccess({\n          name,\n          foodGroup\n        });\n      } else {\n        alert(`${name} is not found in the canvas GG ðŸ”¥`);\n      }\n    } else {\n      //This is the display notification for an unsuccessful character placement\n      //error({ name, foodGroup })\n      showErrorNotification(name, foodGroup);\n    }\n  };\n\n  React.useEffect(getAndUpdateRandomChar, []);\n  React.useEffect(drawBoard, []);\n  React.useEffect(() => {\n    stage.on('dragstart', function (e) {\n      setCurrentCharacter(e);\n      e.target.moveTo(tempLayer);\n      layer.draw();\n    });\n    let previousShape;\n    stage.on('dragmove', function (evt) {\n      const pos = stage.getPointerPosition();\n      const shape = layer.getIntersection(pos);\n\n      if (previousShape && shape) {\n        if (previousShape !== shape) {\n          var _previousShape;\n\n          // leave from old targer\n          (_previousShape = previousShape) === null || _previousShape === void 0 ? void 0 : _previousShape.fire('dragleave', {\n            type: 'dragleave',\n            target: previousShape,\n            evt: evt.evt\n          }, true); // enter new targer\n\n          shape === null || shape === void 0 ? void 0 : shape.fire('dragenter', {\n            type: 'dragenter',\n            target: shape,\n            evt: evt.evt\n          }, true);\n          previousShape = shape;\n        } else {\n          previousShape.fire('dragover', {\n            type: 'dragover',\n            target: previousShape,\n            evt: evt.evt\n          }, true);\n        }\n      } else if (!previousShape && shape) {\n        previousShape = shape;\n        shape.fire('dragenter', {\n          type: 'dragenter',\n          target: shape,\n          evt: evt.evt\n        }, true);\n      } else if (previousShape && !shape) {\n        var _previousShape2;\n\n        (_previousShape2 = previousShape) === null || _previousShape2 === void 0 ? void 0 : _previousShape2.fire('dragleave', {\n          type: 'dragleave',\n          target: previousShape,\n          evt: evt.evt\n        }, true);\n        previousShape = undefined;\n      }\n    });\n    stage.on('dragend', function (e) {\n      const pos = stage.getPointerPosition();\n      const shape = layer.getIntersection(pos);\n\n      if (shape) {\n        var _previousShape3;\n\n        (_previousShape3 = previousShape) === null || _previousShape3 === void 0 ? void 0 : _previousShape3.fire('drop', {\n          type: 'drop',\n          target: previousShape,\n          evt: e.evt\n        }, true);\n      }\n\n      previousShape = undefined;\n      e.target.moveTo(layer);\n      layer.draw();\n      tempLayer.draw();\n    });\n    stage.on('dragenter', () => {\n      layer.draw();\n    });\n    stage.on('dragleave', () => {\n      layer.draw();\n    });\n    stage.on('dragover', () => {\n      layer.draw();\n    });\n  }, []);\n\n  const setOnDrop = () => {\n    stage.on('drop', e => {\n      const {\n        name,\n        foodGroup: currentFoodGroup\n      } = getCurrentCharacter();\n      if (!name || !currentFoodGroup || categorisedCharNames.some(categorised => categorised === name)) return;\n      const foodGroup = e.target.attrs.name;\n      removeCharacter(name, foodGroup, currentFoodGroup);\n      layer.draw();\n      tempLayer.draw();\n    });\n  };\n\n  React.useEffect(setOnDrop, [currentCharacter === null || currentCharacter === void 0 ? void 0 : (_currentCharacter$tar2 = currentCharacter.target) === null || _currentCharacter$tar2 === void 0 ? void 0 : (_currentCharacter$tar3 = _currentCharacter$tar2.attrs) === null || _currentCharacter$tar3 === void 0 ? void 0 : _currentCharacter$tar3.name]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"flex justify-around p-5\",\n      style: {\n        background: BACKGROUND_PURPLE\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-5xl font-thin font-serif\",\n        style: {\n          color: 'whitesmoke'\n        },\n        children: [\"Score:\", ' ', /*#__PURE__*/_jsxDEV(AnimatedNumber, {\n          value: TOTAL_FOOD - remainingCharacters.length - 1,\n          formatValue: value => value.toFixed(1)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-5xl font-thin font-serif\",\n        style: {\n          color: 'whitesmoke'\n        },\n        children: [\"Remaining Food: \", remainingCharacters.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center p-5\",\n      children: notificationList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 355,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Game, \"ieklvlV9FyUL1STHvmpQRLvD/B4=\", false, function () {\n  return [useGameAlert];\n});\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/Users/junyap/foodbank/client/src/Pages/Game/index.tsx"],"names":["AnimatedNumber","DropNotification","Konva","React","allFoods","backgrounds","getAndRemoveItem","useGameAlert","nanoid","CheckCircleIcon","BanIcon","BACKGROUND_PURPLE","TOTAL_FOOD","length","width","window","innerWidth","height","innerHeight","stage","Stage","container","visible","layer","Layer","add","tempLayer","drawBoard","drawImage","scale","x","y","px","py","start","end","len","name","group","Group","clipFunc","ctx","beginPath","moveTo","arc","Math","PI","options","image","scaleX","scaleY","konvaImage","Image","draw","forEach","b","onload","src","categorisedCharNames","Game","currentCharacter","setCurrentCharacter","useState","remainingCharacters","setRemainingCharacters","notifications","setNotifications","showSuccessNotification","foodgroup","successNotification","content","color","id","showErrorNotification","errorNotification","notificationList","map","notification","finishGame","getAndUpdateRandomChar","availableChars","randomChar","updated","setTimeout","fromURL","imageHeight","attrs","desiredHeight","setAttrs","draggable","foodGroup","type","stroke","strokeWidth","on","document","body","style","cursor","getCurrentCharacter","target","handleRemoveSuccess","push","removeCharacter","currentFoodGroup","found","find","each","f","destroy","hide","alert","useEffect","e","previousShape","evt","pos","getPointerPosition","shape","getIntersection","fire","undefined","setOnDrop","some","categorised","background","value","toFixed"],"mappings":"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","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\n/* eslint-disable @typescript-eslint/no-explicit-any */\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport AnimatedNumber from 'animated-number-react'\nimport DropNotification from 'Components/DropNotification'\nimport Konva from 'konva'\nimport * as React from 'react'\nimport { allFoods, backgrounds, getAndRemoveItem, FoodImage } from './helper'\nimport useGameAlert from './useGameAlert'\nimport { nanoid } from 'nanoid';\nimport { CheckCircleIcon, BanIcon } from '@heroicons/react/outline'\n\n\nconst BACKGROUND_PURPLE = '#671E75'\n\n\nconst TOTAL_FOOD = allFoods.length\nconst width = window.innerWidth\nconst height = window.innerHeight\n\nconst stage = new Konva.Stage({\n  container: 'dank',\n  width: width,\n  height: height,\n  visible: true\n})\n\nconst layer = new Konva.Layer()\nstage.add(layer)\n\nconst tempLayer = new Konva.Layer()\nstage.add(tempLayer)\n\nconst drawBoard = () => {\n  const drawImage = ({ scale, x, y, px, py, start, end, len, name }: any) =>\n    function () {\n      const group = new Konva.Group({\n        x,\n        y,\n        clipFunc(ctx: any) {\n          ctx.beginPath()\n          ctx.moveTo(px, py)\n          ctx.arc(px, py, len, start, Math.PI - end, false)\n        }\n      })\n      const options = {\n        // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n        // @ts-ignore\n        image: this,\n        name,\n        scaleX: scale,\n        scaleY: scale\n      } as any\n\n      const konvaImage = new Konva.Image(options)\n\n      group.add(konvaImage)\n      layer.add(group)\n\n      layer.draw()\n    }\n\n  backgrounds.forEach(b => {\n    const image = new Image()\n    image.onload = drawImage(b)\n    image.src = b.src\n  })\n}\n\nconst categorisedCharNames: string[] = []\n\nconst Game: React.FC = () => {\n  const [currentCharacter, setCurrentCharacter] = React.useState<any>()\n  const [remainingCharacters, setRemainingCharacters] = React.useState<\n    FoodImage[]\n  >(allFoods)\n\n  interface Notification {\n    content: any;\n    id: string,\n  }\n\n  const [notifications, setNotifications] = React.useState<Notification[]>([]);\n\n  function showSuccessNotification(name: string, foodgroup: string) {\n    const successNotification: Notification = {\n      content: (\n        <div className=\"flex flex-row justify-around items-center text-black \">\n          <div className=\"flex flex-col\">\n            <h2 className='text-3xl'>{'Correct!'}</h2>\n            <p>{`${name} is a ${foodgroup}`}</p>\n          </div>\n          <CheckCircleIcon className=\"w-12 h-12\" style={{ color: '#34D399' }} />\n        </div>\n      ),\n      id: 'notification-' + nanoid()\n    }\n    setNotifications([...notifications, successNotification])\n  }\n\n  function showErrorNotification(name: string, foodgroup: string) {\n    const errorNotification: Notification = {\n      content: (\n        <div className=\"flex flex-row justify-around items-center text-black \">\n          <div className=\"flex flex-col\">\n            <h2 className='text-3xl'>{'Uh oh!'}</h2>\n            <p >{`${name} is not a ${foodgroup}`}</p>\n          </div>\n          <BanIcon className=\"w-12 h-12\" style={{color:'#EF4444'}}/>\n        </div>\n      ),\n      id: 'notification-' + nanoid()\n    }\n    setNotifications([...notifications, errorNotification])\n  }\n\n\n  const notificationList = notifications.map(notification => (\n    <DropNotification\n      id={notification.id}\n      content={notification.content}\n      key={notification.id}\n      //delay is the number of seconds before the notification expires (3 seconds)\n      delay={3000}\n    />\n  ));\n\n\n  const { finishGame } = useGameAlert()\n\n  const getAndUpdateRandomChar = () => {\n    // handle game en id=\"dank\"d\n    let availableChars: FoodImage[] = remainingCharacters\n    if (!remainingCharacters.length) {\n      finishGame()\n      setRemainingCharacters(allFoods)\n      availableChars = allFoods\n    }\n    const [randomChar, updated] = getAndRemoveItem(availableChars, 'image')\n    setRemainingCharacters(updated)\n\n    if (!randomChar) return\n\n    setTimeout(() => {\n      Konva.Image.fromURL(randomChar.image, function (image: any) {\n\n        // Scaling image based on original size. Currently uses a hacky way to do it but made the images more consistent in size\n        const imageHeight = image.attrs.image.height\n        const desiredHeight = 169\n        const scale = desiredHeight / imageHeight\n\n        image.setAttrs({\n          x: stage.width() / 1.4,\n          y: stage.height() / 2,\n          scaleX: scale,\n          scaleY: scale,\n          draggable: true,\n          name: randomChar.name,\n          foodGroup: randomChar.type,\n          stroke: 'black',\n          strokeWidth: 10\n        })\n\n        image.on('mouseover', function () {\n          document.body.style.cursor = 'pointer'\n        })\n        image.on('mouseout', function () {\n          document.body.style.cursor = 'default'\n        })\n\n        // add the shape to the layer\n        layer.add(image)\n        layer.draw()\n\n      })\n    }, 0)\n  }\n\n  function getCurrentCharacter(): {\n    name: string | undefined\n    foodGroup: string | undefined\n  } {\n    const { name, foodGroup } = currentCharacter?.target?.attrs || {}\n    return { name, foodGroup }\n  }\n\n  const handleRemoveSuccess = ({\n    name,\n    foodGroup\n  }: {\n    name: string\n    foodGroup: string\n  }) => {\n    //This is where it calls the notification of a successful run\n    //success({ name, foodGroup })\n    showSuccessNotification(name, foodGroup)\n    //correctNotification(name, foodGroup)\n    setCurrentCharacter(null)\n    getAndUpdateRandomChar()\n    categorisedCharNames.push(name)\n  }\n\n  const removeCharacter = (\n    name: string,\n    foodGroup: string,\n    currentFoodGroup: string\n  ) => {\n    const found = stage.find(`.${name}`)\n    if (foodGroup === currentFoodGroup) {\n      if (found) {\n        found.each(f => {\n          f.destroy()\n          return f.hide()\n        })\n        handleRemoveSuccess({ name, foodGroup })\n      } else {\n        alert(`${name} is not found in the canvas GG ðŸ”¥`)\n      }\n    } else {\n      //This is the display notification for an unsuccessful character placement\n      //error({ name, foodGroup })\n      showErrorNotification(name, foodGroup)\n    }\n  }\n\n  React.useEffect(getAndUpdateRandomChar, [])\n\n  React.useEffect(drawBoard, [])\n\n  React.useEffect(() => {\n    stage.on('dragstart', function (e) {\n      setCurrentCharacter(e)\n      e.target.moveTo(tempLayer)\n      layer.draw()\n    })\n    let previousShape: any\n    stage.on('dragmove', function (evt) {\n      const pos = stage.getPointerPosition() as any\n      const shape = layer.getIntersection(pos)\n      if (previousShape && shape) {\n        if (previousShape !== shape) {\n          // leave from old targer\n          previousShape?.fire(\n            'dragleave',\n            {\n              type: 'dragleave',\n              target: previousShape,\n              evt: evt.evt\n            },\n            true\n          )\n\n          // enter new targer\n          shape?.fire(\n            'dragenter',\n            {\n              type: 'dragenter',\n              target: shape,\n              evt: evt.evt\n            },\n            true\n          )\n          previousShape = shape\n        } else {\n          previousShape.fire(\n            'dragover',\n            {\n              type: 'dragover',\n              target: previousShape,\n              evt: evt.evt\n            },\n            true\n          )\n        }\n      } else if (!previousShape && shape) {\n        previousShape = shape\n        shape.fire(\n          'dragenter',\n          {\n            type: 'dragenter',\n            target: shape,\n            evt: evt.evt\n          },\n          true\n        )\n      } else if (previousShape && !shape) {\n        previousShape?.fire(\n          'dragleave',\n          {\n            type: 'dragleave',\n            target: previousShape,\n            evt: evt.evt\n          },\n          true\n        )\n        previousShape = undefined\n      }\n    })\n    stage.on('dragend', function (e) {\n      const pos = stage.getPointerPosition() as any\n\n      const shape = layer.getIntersection(pos)\n      if (shape) {\n        previousShape?.fire(\n          'drop',\n          {\n            type: 'drop',\n            target: previousShape,\n            evt: e.evt\n          },\n          true\n        )\n      }\n      previousShape = undefined\n      e.target.moveTo(layer)\n      layer.draw()\n      tempLayer.draw()\n    })\n\n    stage.on('dragenter', () => {\n      layer.draw()\n    })\n\n    stage.on('dragleave', () => {\n      layer.draw()\n    })\n\n    stage.on('dragover', () => {\n      layer.draw()\n    })\n  }, [])\n\n  const setOnDrop = () => {\n    stage.on('drop', (e: any) => {\n      const { name, foodGroup: currentFoodGroup } = getCurrentCharacter()\n      if (\n        !name ||\n        !currentFoodGroup ||\n        categorisedCharNames.some(categorised => categorised === name)\n      )\n        return\n\n      const foodGroup = e.target.attrs.name\n\n      removeCharacter(name, foodGroup, currentFoodGroup)\n      layer.draw()\n      tempLayer.draw()\n    })\n  }\n\n  React.useEffect(setOnDrop, [currentCharacter?.target?.attrs?.name])\n\n  return (\n    <div>\n      <header className='flex justify-around p-5' style={{ background: BACKGROUND_PURPLE }}>\n        <h2 className='text-5xl font-thin font-serif' style={{ color: 'whitesmoke' }}>\n          Score:{' '}\n          <AnimatedNumber\n            value={TOTAL_FOOD - remainingCharacters.length - 1}\n            formatValue={(value: number) => value.toFixed(1)}\n          />\n        </h2>\n        <h2 className='text-5xl font-thin font-serif' style={{ color: 'whitesmoke' }}>\n          Remaining Food: {remainingCharacters.length}\n        </h2>\n      </header>\n      <div className='flex justify-center p-5'>\n        {notificationList}\n      </div>\n    </div>\n  )\n}\n\nexport default Game\n"]},"metadata":{},"sourceType":"module"}