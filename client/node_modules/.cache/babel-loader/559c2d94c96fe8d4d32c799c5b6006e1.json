{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/x4wiz/WebstormProjects/foodbank/client/src/Pages/Recipe/overview-test.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useParams } from 'react-router';\nimport { recipes } from 'lib/Recipes';\nimport Buttons from 'Components/Recipe/Buttons';\nimport EquipmentList from 'Components/Recipe/EquipmentList';\nimport IngredientsList from 'Components/Recipe/IngredientsList';\nimport CategoryInfo from 'Components/Recipe/CategoryInfo';\n\n/**\n * A page displaying an overview of a particular recipe as specified in the URL.\n * It includes information such as the recipe's category, tags, ingredients and\n * equipment. From here, a user can navigate to pages displaying the recipe's\n * steps in a slideshow or one page format.\n */\nconst RecipeOverview = () => {\n  _s();\n\n  const {\n    slug\n  } = useParams();\n  let recipe = null;\n\n  for (const potential_recipe of recipes) {\n    if (slug === potential_recipe.slug) {\n      recipe = potential_recipe;\n    }\n  }\n\n  if (!recipe) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Recipe cannot be found!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this);\n  } else {\n    const colorScheme = recipe.colorScheme;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: 'relative grid gap-4 grid-cols-1 sm:grid-cols-2 p-10 ' + colorScheme.bg,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: 'text-4xl underline font-semibold font-serif ' + colorScheme.header,\n          children: recipe.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CategoryInfo, {\n          recipe: recipe\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IngredientsList, {\n          recipe: recipe\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(EquipmentList, {\n          recipe: recipe\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Buttons, {\n          recipe: recipe\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"relative w-4/5 rounded-3xl\",\n          src: recipe.finalShot,\n          alt: recipe.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_s(RecipeOverview, \"DpOdpe+T7d3Ytb7f6neHj0L13w0=\", false, function () {\n  return [useParams];\n});\n\n_c = RecipeOverview;\nexport default RecipeOverview;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipeOverview\");","map":{"version":3,"sources":["/Users/x4wiz/WebstormProjects/foodbank/client/src/Pages/Recipe/overview-test.tsx"],"names":["React","useParams","recipes","Buttons","EquipmentList","IngredientsList","CategoryInfo","RecipeOverview","slug","recipe","potential_recipe","colorScheme","bg","header","name","finalShot"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,cAA1B;AAEA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,aAAP,MAA0B,iCAA1B;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,YAAP,MAAyB,gCAAzB;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,cAAwB,GAAG,MAAM;AAAA;;AACrC,QAAM;AAAEC,IAAAA;AAAF,MAAWP,SAAS,EAA1B;AAEA,MAAIQ,MAAqB,GAAG,IAA5B;;AAEA,OAAK,MAAMC,gBAAX,IAA+BR,OAA/B,EAAwC;AACtC,QAAIM,IAAI,KAAKE,gBAAgB,CAACF,IAA9B,EAAoC;AAClCC,MAAAA,MAAM,GAAGC,gBAAT;AACD;AACF;;AAED,MAAI,CAACD,MAAL,EAAa;AACX,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFD,MAEO;AACL,UAAME,WAAW,GAAGF,MAAM,CAACE,WAA3B;AACA,wBACE;AACE,MAAA,SAAS,EACP,yDAAyDA,WAAW,CAACC,EAFzE;AAAA,8BAKE;AAAA,gCACE;AACE,UAAA,SAAS,EACP,iDAAiDD,WAAW,CAACE,MAFjE;AAAA,oBAKGJ,MAAM,CAACK;AALV;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE,QAAC,YAAD;AAAc,UAAA,MAAM,EAAEL;AAAtB;AAAA;AAAA;AAAA;AAAA,gBARF,eASE,QAAC,eAAD;AAAiB,UAAA,MAAM,EAAEA;AAAzB;AAAA;AAAA;AAAA;AAAA,gBATF,eAUE,QAAC,aAAD;AAAe,UAAA,MAAM,EAAEA;AAAvB;AAAA;AAAA;AAAA;AAAA,gBAVF,eAWE,QAAC,OAAD;AAAS,UAAA,MAAM,EAAEA;AAAjB;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAkBE;AAAA,+BACE;AACE,UAAA,SAAS,EAAC,4BADZ;AAEE,UAAA,GAAG,EAAEA,MAAM,CAACM,SAFd;AAGE,UAAA,GAAG,EAAEN,MAAM,CAACK;AAHd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA4BD;AACF,CA5CD;;GAAMP,c;UACaN,S;;;KADbM,c;AA8CN,eAAeA,cAAf","sourcesContent":["import React from 'react'\nimport { useParams } from 'react-router'\nimport { Recipe } from 'lib/types'\nimport { recipes } from 'lib/Recipes'\n\nimport Buttons from 'Components/Recipe/Buttons'\nimport EquipmentList from 'Components/Recipe/EquipmentList'\nimport IngredientsList from 'Components/Recipe/IngredientsList'\nimport CategoryInfo from 'Components/Recipe/CategoryInfo'\n\ninterface ParamTypes {\n  /** Slug which identifies recipe, used in the URL. */\n  slug: string\n}\n\n/**\n * A page displaying an overview of a particular recipe as specified in the URL.\n * It includes information such as the recipe's category, tags, ingredients and\n * equipment. From here, a user can navigate to pages displaying the recipe's\n * steps in a slideshow or one page format.\n */\nconst RecipeOverview: React.FC = () => {\n  const { slug } = useParams<ParamTypes>()\n\n  let recipe: Recipe | null = null;\n\n  for (const potential_recipe of recipes) {\n    if (slug === potential_recipe.slug) {\n      recipe = potential_recipe;\n    }\n  }\n\n  if (!recipe) {\n    return <div>Recipe cannot be found!</div>\n  } else {\n    const colorScheme = recipe.colorScheme\n    return (\n      <div\n        className={\n          'relative grid gap-4 grid-cols-1 sm:grid-cols-2 p-10 ' + colorScheme.bg\n        }\n      >\n        <div>\n          <h1\n            className={\n              'text-4xl underline font-semibold font-serif ' + colorScheme.header\n            }\n          >\n            {recipe.name}\n          </h1>\n          <CategoryInfo recipe={recipe} />\n          <IngredientsList recipe={recipe} />\n          <EquipmentList recipe={recipe} />\n          <Buttons recipe={recipe} />\n        </div>\n        <div>\n          <img\n            className='relative w-4/5 rounded-3xl'\n            src={recipe.finalShot}\n            alt={recipe.name}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default RecipeOverview\n"]},"metadata":{},"sourceType":"module"}