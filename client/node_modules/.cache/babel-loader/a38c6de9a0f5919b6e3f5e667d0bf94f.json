{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/timothy/foodbank/client/src/Components/Map/index.tsx\",\n    _s = $RefreshSig$();\n\n// naming conventions of items in svg = id of group in camelCase, image import name in PascalCase.\n// svg tree generated from dev/svgParse.py (super hacky atm)\nimport React, { useEffect, useState } from 'react';\nimport { TransformComponent, TransformWrapper } from 'react-zoom-pan-pinch';\nimport TownBoxWrapper from './TownBoxWrapper';\nimport './index.css';\nimport MapImage from './MapImage';\n\nconst Map = () => {\n  _s();\n\n  // Used because SVG does not scale properly without\n  const [scale, setScale] = useState(1);\n  const [select, setSelect] = useState(null);\n  const [display, setDisplay] = useState(false);\n  useEffect(() => {\n    function handleResize() {\n      const mobileWidth = 2900;\n      const minStaticWidth = 1170;\n      const targetWidth = window.innerWidth > minStaticWidth ? window.innerWidth : mobileWidth;\n      setScale(targetWidth / 4961);\n    }\n\n    handleResize();\n    window.addEventListener('resize', handleResize);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(TransformWrapper, {\n        doubleClick: {\n          disabled: true\n        },\n        wheel: {\n          disabled: true\n        },\n        initialScale: 1,\n        children: ({\n          resetTransform,\n          setTransform\n        }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(TransformComponent, {\n            children: /*#__PURE__*/_jsxDEV(MapImage, {\n              scale: scale,\n              setTransform: setTransform,\n              setDisplay: setDisplay,\n              display: display,\n              setSelect: setSelect,\n              selected: select\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `fixed top-0 left-0 w-screen h-screen flex justify-center ${display ? '' : 'hidden'}`,\n            children: /*#__PURE__*/_jsxDEV(TownBoxWrapper, {\n              selected: select,\n              resetTransform: resetTransform,\n              setSelect: setSelect,\n              setDisplay: setDisplay\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Map, \"9TC+JReWmy5Ra+HMS5kSWcIADT4=\");\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/home/timothy/foodbank/client/src/Components/Map/index.tsx"],"names":["React","useEffect","useState","TransformComponent","TransformWrapper","TownBoxWrapper","MapImage","Map","scale","setScale","select","setSelect","display","setDisplay","handleResize","mobileWidth","minStaticWidth","targetWidth","window","innerWidth","addEventListener","disabled","resetTransform","setTransform"],"mappings":";;;;;;AAAA;AACA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,kBAAT,EAA6BC,gBAA7B,QAAqD,sBAArD;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAO,aAAP;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAGA,MAAMC,GAAa,GAAG,MAAM;AAAA;;AAC1B;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,IAAD,CAApC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,KAAD,CAAtC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,aAASa,YAAT,GAAwB;AACtB,YAAMC,WAAW,GAAG,IAApB;AACA,YAAMC,cAAc,GAAG,IAAvB;AACA,YAAMC,WAAW,GACfC,MAAM,CAACC,UAAP,GAAoBH,cAApB,GAAqCE,MAAM,CAACC,UAA5C,GAAyDJ,WAD3D;AAEAN,MAAAA,QAAQ,CAACQ,WAAW,GAAG,IAAf,CAAR;AACD;;AACDH,IAAAA,YAAY;AACZI,IAAAA,MAAM,CAACE,gBAAP,CAAwB,QAAxB,EAAkCN,YAAlC;AACD,GAVQ,EAUN,EAVM,CAAT;AAYA,sBACE;AAAA,2BACE;AAAA,6BACE,QAAC,gBAAD;AACE,QAAA,WAAW,EAAE;AAAEO,UAAAA,QAAQ,EAAE;AAAZ,SADf;AAEE,QAAA,KAAK,EAAE;AAAEA,UAAAA,QAAQ,EAAE;AAAZ,SAFT;AAGE,QAAA,YAAY,EAAE,CAHhB;AAAA,kBAKG,CAAC;AAAEC,UAAAA,cAAF;AAAkBC,UAAAA;AAAlB,SAAD,kBACC;AAAA,kCACE,QAAC,kBAAD;AAAA,mCACE,QAAC,QAAD;AACE,cAAA,KAAK,EAAEf,KADT;AAEE,cAAA,YAAY,EAAEe,YAFhB;AAGE,cAAA,UAAU,EAAEV,UAHd;AAIE,cAAA,OAAO,EAAED,OAJX;AAKE,cAAA,SAAS,EAAED,SALb;AAME,cAAA,QAAQ,EAAED;AANZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAYE;AAAK,YAAA,SAAS,EAAG,4DAA2DE,OAAO,GAAG,EAAH,GAAQ,QAAS,EAApG;AAAA,mCACE,QAAC,cAAD;AACE,cAAA,QAAQ,EAAEF,MADZ;AAEE,cAAA,cAAc,EAAEY,cAFlB;AAGE,cAAA,SAAS,EAAEX,SAHb;AAIE,cAAA,UAAU,EAAEE;AAJd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAZF;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAmCD,CArDD;;GAAMN,G;;KAAAA,G;AAuDN,eAAeA,GAAf","sourcesContent":["// naming conventions of items in svg = id of group in camelCase, image import name in PascalCase.\n// svg tree generated from dev/svgParse.py (super hacky atm)\n\nimport React, { useEffect, useState } from 'react'\nimport { TransformComponent, TransformWrapper } from 'react-zoom-pan-pinch'\nimport TownBoxWrapper from './TownBoxWrapper'\nimport './index.css'\nimport MapImage from './MapImage'\n\n\nconst Map: React.FC = () => {\n  // Used because SVG does not scale properly without\n  const [scale, setScale] = useState(1)\n  const [select, setSelect] = useState(null)\n  const [display, setDisplay] = useState(false)\n\n  useEffect(() => {\n    function handleResize() {\n      const mobileWidth = 2900\n      const minStaticWidth = 1170\n      const targetWidth =\n        window.innerWidth > minStaticWidth ? window.innerWidth : mobileWidth\n      setScale(targetWidth / 4961)\n    }\n    handleResize()\n    window.addEventListener('resize', handleResize)\n  }, [])\n\n  return (\n    <>\n      <div>\n        <TransformWrapper\n          doubleClick={{ disabled: true }}\n          wheel={{ disabled: true }}\n          initialScale={1}\n        >\n          {({ resetTransform, setTransform }) => (\n            <>\n              <TransformComponent>\n                <MapImage\n                  scale={scale}\n                  setTransform={setTransform}\n                  setDisplay={setDisplay}\n                  display={display}\n                  setSelect={setSelect}\n                  selected={select}\n                />\n              </TransformComponent>\n\n              <div className={`fixed top-0 left-0 w-screen h-screen flex justify-center ${display ? '' : 'hidden'}`}>\n                <TownBoxWrapper\n                  selected={select}\n                  resetTransform={resetTransform}\n                  setSelect={setSelect}\n                  setDisplay={setDisplay}\n                />\n              </div>\n            </>\n          )}\n        </TransformWrapper>\n      </div>\n    </>\n  )\n}\n\nexport default Map"]},"metadata":{},"sourceType":"module"}