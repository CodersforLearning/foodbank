{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/x4wiz/WebstormProjects/foodbank/client/src/Components/Recipe/List-View/Card/index.tsx\";\n\n/* eslint-disable react/prop-types */\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport './index.css';\n\nconst getClassesFromColor = (color, unlocked) => {\n  if (unlocked) {\n    const fontColor = color === 'Primary' ? 'white' : 'black';\n    return `relative unlocked bg-${color.toLowerCase()} text-${fontColor} shadow-xl hover:shadow-2xl`;\n  } else {\n    return `relative locked bg-grey opacity-50 text-black shadow-xl hover:shadow-2xl`;\n  }\n};\n\nexport const Card = ({\n  unlocked = true,\n  label,\n  image,\n  text,\n  color,\n  slug,\n  character,\n  ...props\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: ['card', getClassesFromColor(color, unlocked)].join(' '),\n    ...props,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hover:shadow-xl absolute left-3 top-3 h-30 w-24 z-100\",\n      children: character ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: character.imageGif,\n        alt: character.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 22\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: '/recipe/' + slug + '/overview',\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: image,\n        alt: text,\n        className: \"card-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_c = Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/Users/x4wiz/WebstormProjects/foodbank/client/src/Components/Recipe/List-View/Card/index.tsx"],"names":["React","Link","getClassesFromColor","color","unlocked","fontColor","toLowerCase","Card","label","image","text","slug","character","props","join","imageGif","name"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAO,aAAP;;AAuCA,MAAMC,mBAAmB,GAAG,CAACC,KAAD,EAAgBC,QAAhB,KAAsC;AAChE,MAAIA,QAAJ,EAAc;AACZ,UAAMC,SAAS,GAAGF,KAAK,KAAK,SAAV,GAAsB,OAAtB,GAAgC,OAAlD;AACA,WAAQ,wBAAuBA,KAAK,CAACG,WAAN,EAAoB,SAAQD,SAAU,6BAArE;AACD,GAHD,MAGO;AACL,WAAQ,0EAAR;AACD;AACF,CAPD;;AASA,OAAO,MAAME,IAAyB,GAAG,CAAC;AACEH,EAAAA,QAAQ,GAAG,IADb;AAEEI,EAAAA,KAFF;AAGEC,EAAAA,KAHF;AAIEC,EAAAA,IAJF;AAKEP,EAAAA,KALF;AAMEQ,EAAAA,IANF;AAOEC,EAAAA,SAPF;AAQE,KAAGC;AARL,CAAD,KASO;AAC9C,sBACE;AAAK,IAAA,SAAS,EAAE,CAAC,MAAD,EAASX,mBAAmB,CAACC,KAAD,EAAQC,QAAR,CAA5B,EAA+CU,IAA/C,CAAoD,GAApD,CAAhB;AAAA,OAA8ED,KAA9E;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,uDAAf;AAAA,gBACGD,SAAS,gBAAG;AAAK,QAAA,GAAG,EAAEA,SAAS,CAACG,QAApB;AAA8B,QAAA,GAAG,EAAEH,SAAS,CAACI;AAA7C;AAAA;AAAA;AAAA;AAAA,cAAH,GACA;AAFZ;AAAA;AAAA;AAAA;AAAA,YADF,eAKE,QAAC,IAAD;AAAM,MAAA,EAAE,EAAE,aAAaL,IAAb,GAAoB,WAA9B;AAAA,8BACE;AAAK,QAAA,GAAG,EAAEF,KAAV;AAAiB,QAAA,GAAG,EAAEC,IAAtB;AAA4B,QAAA,SAAS,EAAC;AAAtC;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAKF;AAAL;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YALF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAtBM;KAAMD,I","sourcesContent":["/* eslint-disable react/prop-types */\nimport React from 'react'\nimport {Link} from 'react-router-dom'\nimport './index.css'\nimport {Character} from '../../../../lib/types'\n\nexport interface CardProps {\n  /**\n   * Has this recipe been unlocked?\n   */\n  unlocked?: boolean\n  /**\n   * Recipe title\n   */\n  label: string\n  /**\n   * Image to show\n   */\n  image: string\n  /**\n   * Alt text for image\n   */\n  text: string\n  /**\n   * Color of Card\n   */\n  color: 'Primary' | 'Orange' | 'Teal' | 'Blue'\n  /**\n   * Optional click handler\n   */\n  onClick?: () => void\n  /**\n   * Slug part of the recipe url\n   */\n  slug: string\n  /**\n   * Character for the recipe\n   */\n  character?: Character\n}\n\n\nconst getClassesFromColor = (color: string, unlocked: boolean) => {\n  if (unlocked) {\n    const fontColor = color === 'Primary' ? 'white' : 'black';\n    return `relative unlocked bg-${color.toLowerCase()} text-${fontColor} shadow-xl hover:shadow-2xl`\n  } else {\n    return `relative locked bg-grey opacity-50 text-black shadow-xl hover:shadow-2xl`\n  }\n}\n\nexport const Card: React.FC<CardProps> = ({\n                                            unlocked = true,\n                                            label,\n                                            image,\n                                            text,\n                                            color,\n                                            slug,\n                                            character,\n                                            ...props\n                                          }) => {\n  return (\n    <div className={['card', getClassesFromColor(color, unlocked)].join(' ')} {...props}>\n      <div className='hover:shadow-xl absolute left-3 top-3 h-30 w-24 z-100'>\n        {character ? <img src={character.imageGif} alt={character.name}\n        ></img> : null}\n      </div>\n      <Link to={'/recipe/' + slug + '/overview'}>\n        <img src={image} alt={text} className='card-image'></img>\n        <h1>{label}</h1>\n      </Link>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}